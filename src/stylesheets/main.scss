@import '~sn-stylekit/dist/stylekit.css';
@import '~highlight.js/scss/vs.scss';

:root {
  --sn-stylekit-font-size-editor: 16px;
  --sn-stylekit-monospace-font: SFMono-Regular, Consolas, Liberation Mono, Menlo,
    'Ubuntu Mono', 'Courier New', monospace;
}

body,
html {
  background-color: transparent;
  background-color: var(--sn-stylekit-background-color);
  font-family: var(--sn-stylekit-sans-serif-font);
  font-size: var(--sn-stylekit-base-font-size);
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
  /* This is used to prevent KaTeX from overflowing the page */
  overflow-y: hidden;
}

* {
  // To prevent gray flash when focusing input on mobile Safari
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.sn-component {
  display: flex;
  flex-direction: column;
  font-size: var(--sn-stylekit-font-size-editor);
  min-height: 100vh;
  @media screen and (max-width: 420px) {
    min-height: -webkit-fill-available;
  }
  &.vs {
    background-color: #fffffe;
    .settings {
      color: #000000;
    }
  }
  &.vs-dark {
    background-color: #1e1e1e;
    .settings {
      color: #d4d4d4;
    }
  }
  &.hc-black {
    background-color: #000000;
    .settings {
      color: #ffffff;
    }
  }
}

/* Content */
#contentContainer {
  display: flex;
  flex-direction: row;
  padding-top: 1em;
  &.editMode {
    .MonacoEditorContainerParentDiv {
      width: 100%;
    }
  }
  &.viewMode {
    #viewContainer {
      width: 100%;
    }
  }
  &.editMode.viewMode {
    .MonacoEditorContainerParentDiv,
    #viewContainer {
      width: 50%;
    }
  }
  height: var(--heightVar);
  max-height: var(--heightVar);
  min-height: var(--heightVar);
  // Hides the horizontal scroll bar when using the Monaco Editor
  // Otherwise the horizontal scroll bar will flash when the Monaco editor suggests words
  --heightVar: calc(100vh - 3em);
  @media screen and (max-width: 1144px) {
    --heightVar: calc(100vh - 4.25em);
  }
  @media screen and (max-width: 1036px) {
    --heightVar: calc(100vh - 5em);
  }
  /* For three lines of settings */
  @media screen and (max-width: 815px) {
    --heightVar: calc(100vh - 5.5em);
  }
  @media screen and (max-width: 731px) {
    --heightVar: calc(100vh - 6.5em);
  }
  /* Make settings small when hidden */
  &.hideSettings {
    --heightVar: calc(100vh - 3em);
  }
}

/** Monaco Editor Parent div*/
.MonacoEditorContainerParentDiv {
  min-width: 150px;
  overflow-x: hidden !important;
  overflow-y: hidden;
  width: 100%;
}

.MonacoEditorContainer,
.MonacoDiffEditorContainer {
  height: 100%;
  width: 100%;
}

/* view mode */
#viewContainer {
  font-size: var(--sn-stylekit-font-size-editor);
  @media screen and (max-width: 650px) {
    font-size: 18px;
  }
  line-height: 1.7;
  overflow: auto;
  padding: 0px 1em 1em;

  a {
    color: var(--sn-stylekit-info-color); // #086dd6;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }

  blockquote {
    margin: 0;
    margin-top: 0;
    margin-bottom: 16px;
    padding: 0 1em;
    color: #6a737d;
    border-left: 0.25em solid #dfe2e5;
  }

  hr {
    border: 0.5px solid var(--sn-stylekit-border-color);
  }

  img {
    max-width: 100%; // 645.500px;
  }

  table {
    display: block;
    width: 100%;
    overflow: auto;
    margin-top: 0;
    margin-bottom: 16px;
    border-spacing: 0;
    border-collapse: collapse;

    tr {
      background-color: transparent; // #fff;
      border-top: 1px solid var(--sn-stylekit-contrast-border-color); // #c6cbd1;
    }

    td,
    th {
      padding: 6px 13px;
      border: 1px solid var(--sn-stylekit-contrast-border-color); // #dfe2e5;
    }

    tr:nth-child(2n) {
      background-color: var(
        --sn-stylekit-contrast-background-color
      ); // #f6f8fa;
      code,
      pre {
        background-color: var(--sn-stylekit-background-color);
      }
    }
  }
  summary {
    .link {
      display: inline;
      color: var(--sn-stylekit-info-color);
    }
    .link:hover {
      text-decoration: underline;
    }
  }

  h1,
  h2,
  h3 {
    line-height: normal;
  }

  /* Code */
  code,
  pre {
    font-family: var(--sn-stylekit-monospace-font);
  }
  .hljs {
    color: var(--sn-stylekit-contrast-foreground-color);
  }
  .hljs-tag {
    color: var(--sn-stylekit-foreground-color);
  }

  code {
    box-sizing: border-box;
    word-wrap: break-word;
    padding: 0.2em 0.4em;
    margin: 0;
    font-size: 85%;
    background-color: var(
      --sn-stylekit-contrast-background-color
    ); // rgba(27,31,35,.05);
    border-radius: 3px;
  }

  pre {
    padding: 16px;
    overflow: auto;
    font-size: 85%;
    line-height: 1.45;
    background-color: var(
      --sn-stylekit-contrast-background-color
    ); // rgba(27,31,35,.05);// #f6f8fa; the latter doesn't work well on dark mode
    color: var(--sn-stylekit-foreground-color);
    border-radius: 3px;
    word-wrap: normal;
    margin-top: 0;
    margin-bottom: 16px;
  }

  pre > code {
    padding: 0;
    margin: 0;
    font-size: 100%;
    word-break: normal;
    white-space: pre;
    background: transparent;
    background-color: transparent;
    border: 0;
  }

  pre code {
    display: inline;
    max-width: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    line-height: inherit;
    word-wrap: normal;
    background-color: initial;
    border: 0;
  }
}

/** Settings */
#settingsContainer {
  display: flex;
  flex-direction: row;
  margin-bottom: auto;
  margin-top: auto;
  opacity: 0.2;
  overflow-x: auto;
  padding-left: 1em;
  transition: opacity 400ms ease-out;
  @media screen and (max-width: 720px) {
    padding-left: 0.5em;
  }
  @media screen and (max-width: 500px) {
    opacity: 0.5;
  }
  @media screen and (min-width: 801px) {
    &.hide {
      opacity: 0;
    }
  }
  &:focus,
  &:hover,
  &.focused {
    opacity: 1;
    transition: opacity 250ms ease-in;
  }
}

.settings {
  color: var(--sn-stylekit-foreground-color);
  display: flex;
  padding-right: 0.5em;
  @media screen and (max-width: 695px) {
    padding-right: 0.2em;
  }
  .buttons {
    padding-right: 0px;
  }
  &.buttons .button {
    margin-right: 0.5em;
  }
  .button {
    border: 1px solid var(--sn-component-inner-border-color);
    border-radius: 0;
    max-height: 22.6px;
    padding: 0px 0.5em;
  }
  .label {
    display: block;
    font-size: 16px;
    text-align: center;
  }
  label {
    min-height: 22.6px;
  }
  select {
    background-color: var(--sn-stylekit-background-color);
    color: var(--sn-stylekit-foreground-color);
    //font-size: var(--sn-stylekit-font-size-editor);
    font-size: 16px;
  }
  @media screen and (max-width: 1036px) {
    flex-direction: column;
    &.buttons {
      flex-direction: row;
    }
  }
}

/* Persist for all themes */
.MonacoEditorContainer {
  /* This hides the shadow at the top of the editor */
  .monaco-editor .scroll-decoration {
    box-shadow: none;
  }
}

/* Only for Sn theme */
.sn-theme {
  .monaco-editor .line-numbers {
    color: var(--sn-stylekit-foreground-color);
    opacity: 0.6;
  }

  /** This is the editing / input container */
  .monaco-editor,
  .monaco-editor .margin, /* This is the line numbers container */
  .monaco-editor-background,
  .monaco-editor .inputarea.ime-input {
    background-color: var(--sn-stylekit-background-color);
  }

  /* Find widget */
  .monaco-editor .find-widget {
    box-shadow: 0 2px 8px var(--sn-stylekit-shadow-color);
    background-color: var(--sn-stylekit-contrast-background-color);
  }
  .monaco-editor .find-widget > .find-part .monaco-inputbox,
  .monaco-editor .find-widget > .replace-part .monaco-inputbox {
    background-color: var(--sn-stylekit-background-color) !important;
    border-color: var(--sn-stylekit-border-color) !important;
  }
  .monaco-editor .find-widget .monaco-inputbox.synthetic-focus {
    outline-color: var(--sn-stylekit-info-color);
  }
  .monaco-editor .find-widget > .find-part .monaco-inputbox > .wrapper > .input,
  .monaco-editor
    .find-widget
    > .replace-part
    .monaco-inputbox
    > .wrapper
    > .input {
    color: var(--sn-stylekit-foreground-color) !important;
  }
  .monaco-editor .find-widget.no-results .matchesCount {
    color: var(--sn-stylekit-danger-color);
  }

  /* Mini Map */
  .monaco-editor .minimap-shadow-visible {
    box-shadow: var(--sn-stylekit-shadow-color) -6px 0 6px -6px inset;
  }

  /* Quick input widget */
  .quick-input-widget.show-file-icons {
    background-color: var(--sn-stylekit-contrast-background-color) !important;
    color: var(--sn-stylekit-foreground-color) !important;
    box-shadow: var(--sn-stylekit-shadow-color) 0px 5px 8px !important;
  }

  /* This is for the text and keyboard items in the list when you right click and press F1 
  and also the icons in the find widget */
  .monaco-editor .monaco-list-row,
  .monaco-editor .monaco-keybinding-key,
  .monaco-editor .find-widget,
  .mtk1 {
    color: var(--sn-stylekit-foreground-color);
  }

  /* This is for 'recently used' and 'other commands' */
  .monaco-editor .quick-input-list-separator {
    color: var(--sn-stylekit-info-color);
  }

  @media (prefers-color-scheme: light) {
    /* This is for normal text */
    .mtk10 {
      color: var(--sn-stylekit-foreground-color);
    }
    /* This is for headers */
    .mtk6 {
      color: var(--sn-stylekit-success-color);
    }
    /* This is for links */
    .mtk20,
    .mtk20.detected-link,
    .mtk21,
    .mtk21.detected-link {
      color: var(--sn-stylekit-info-color);
      opacity: 0.95;
    }
  }

  @media (prefers-color-scheme: dark) {
    /* This is for headers */
    .mtk9 {
      color: var(--sn-stylekit-success-color);
      opacity: 0.95;
    }
    /* This is for links */
    .mtk5,
    .mtk5.detected-link {
      color: var(--sn-stylekit-info-color);
      opacity: 0.95;
    }
  }
}
@import './print.scss';
@import './dark.scss';
